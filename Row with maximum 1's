Problem Statement
ou have been given a non-empty grid ‘mat’ with ‘n’ rows and ‘m’ columns consisting of only 0s and 1s. All the rows are sorted in ascending order.
Your task is to find the index of the row with the maximum number of ones.
Note: If two rows have the same number of ones, consider the one with a smaller index. If there’s no row with at least 1 zero, return -1.

Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
3 3
1 1 1
0 0 1
0 0 0
Sample Output 1:
0
Explanation Of The Sample Input 1:
The row with the maximum number of ones is 0 (0 - indexed).
Sample Input 2:
2 2
1 1
1 1
Sample Output 2:
0
Explanation Of The Sample Input 2:
Both rows have the same number of ones. Therefore, we will pick the row with smaller index.



int rowWithMax1s(vector<vector<int>> &matrix, int n, int m) {
    // Write Your Code Here
    int ans=0,sum=0;

    for(int i=0;i<n;i++)
    {
        int cnt =0;
        for(int j=0;j<m;j++)
        {
            cnt += matrix[i][j];
        }
        if(cnt > sum)
        {
            sum = cnt;
            ans = i;
        }
    }
    if(sum == 0)
    return -1;
    return ans;




}
