/*
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most 
significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

*/

class Solution {
    public int[] plusOne(int[] digits) {
        int i;
        for(i=digits.length -1 ;i>=0;i--)
        {
            if(digits[i] <9)
            {
                digits[i]++;
                return digits;
            }
            digits[i] = 0;
            
        }
        
        digits = new int[digits.length+1];
        digits[0] = 1;
        return digits;
        
        // if(digits[digits.length -1 ] == 9)
        // {
        //     digits[digits.length-1] = 0;
        //     if(digits.length == 1)
        //     {
        //         int res[] = new int[digits.length +1 ];
        //         res[digits.length] = 0;
        //         res[digits.length-1 ] = 1;
        //         return res;
        //     }
        //     else
        //     digits[digits.length-2] = digits[digits.length-2]+1;
        // }
        // else
        // {
        //     digits[digits.length-1] = digits[digits.length-1] + 1;
        // }
        // return digits;
    }
}
