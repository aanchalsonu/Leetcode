/*
Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the 
researcher's h-index

According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published
at least h papers that have each been cited at least h times.

 

Example 1:

Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.
Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.
Example 2:

Input: citations = [1,3,1]
Output: 1
 

Constraints:

n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000

*/

class Solution {
public:
    int hIndex(vector<int>& c) {
        sort(c.begin(), c.end());
        int n = c.size();
        //CASE WHERE IN THE NUMBER OF CITATIONS FOR EACH BOOK IS GREATER THAN THE NUMBER OF BOOKS
        if(c[0] >= n)
        return n;

        //CASE WHERE IF N=1 THEN THE ANSWER WILL BE EITHER 0 OR 1 
        //0 WHEN C[0]=0 AND 1 WHEN C[0] !=0 
        if(n==1)
        return !(c[0] == 0);

        //FOR ALL OTHER CASES 
        //CALCULATE N-I AND CHECK  WEATHER THIS VALUE IS GREATER THEN C[I]
        //THE POINT WHERE THIS CONDITION IS SATISFIED IS RETURNED 
        for(int i=0;i<n;i++)
        {
            int left = n-i;
            if(c[i] >= left)
            return left;
        }
        return 0;



        // int i,j;
        // int maxi=0;
        // int n = c.size();

        // if(n == 1 && c[0] == 0)
        // return 0;
        // else if( n==1 && c[0] != 0)
        // return 1;

        // for(i=0;i<n;i++)
        // {
        //     if(n-i >= c[i])
        //     maxi = max(maxi , c[i]);
        // }

        // maxi = min(n,maxi);
        // return maxi;

    }
};
