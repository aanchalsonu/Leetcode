/*

You are given an integer array values where values[i] represents the value of the ith sightseeing spot. Two sightseeing spots i and j have
a distance j - i between them.

The score of a pair (i < j) of sightseeing spots is values[i] + values[j] + i - j: the sum of the values of the sightseeing spots, minus
the distance between them.

Return the maximum score of a pair of sightseeing spots.

 

Example 1:

Input: values = [8,1,5,2,6]
Output: 11
Explanation: i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11
Example 2:

Input: values = [1,2]
Output: 2

*/


class Solution {
public:
    int maxScoreSightseeingPair(vector<int>& values) {
        int i,j,n;
        n = values.size();
        int ans=INT_MIN,maxi=values[0];

        for(int i=1;i<n;i++)
        {
            //this statement is to find the max number from the array where the  given equation when solved gives the max value 
            ans = max(maxi+values[i]-i,ans);
            //this is to find the maximum value fromthe array
            maxi = max(maxi,values[i]+i);
        }

        return ans;

        //BRUTE FORCE APPROACH WITH TIME LIMIT EXCEED ERROR
        // for(i=0;i<n;i++)
        // {
        //     for(j=i+1;j<n;j++)
        //     {
        //         ans = values[i] + values[j] + i - j ;
        //         maxi = max(ans,maxi);
        //     }
        // }
        // return maxi;
    }
};
