/*

A string s is called good if there are no two different characters in s that have the same frequency.

Given a string s, return the minimum number of characters you need to delete to make s good.

The frequency of a character in a string is the number of times it appears in the string. For example, in the string "aab", the 
frequency of 'a' is 2, while the frequency of 'b' is 1.

 

Example 1:

Input: s = "aab"
Output: 0
Explanation: s is already good.
Example 2:

Input: s = "aaabbbcc"
Output: 2
Explanation: You can delete two 'b's resulting in the good string "aaabcc".
Another way it to delete one 'b' and one 'c' resulting in the good string "aaabbc".
Example 3:

Input: s = "ceabaacb"
Output: 2
Explanation: You can delete both 'c's resulting in the good string "eabaab".
Note that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).


*/



class Solution {
public:

/*
Create a map and a set to store frequency and the unique frequency numbers in map and set
compute the frequency and store it in map
Now use set to find weather all the frequencies are unique or not

Decrease the frequency and increase the count value for the each case when the frequency is repeated 

return the count value

check for the corner cases also
*/
    int minDeletions(string s) {
        map<char,int> mp;
        set<int> st;

        int i,count=0;
        for(i=0;i<s.length();i++)
        {
            mp[s[i]]++;
        }

        for(auto itr : mp)
        {
            if(st.find(itr.second) == st.end())
            {
                st.insert(itr.second);
            }
            else 
            {
                while(st.find(itr.second) != st.end())
                {
                    if(itr.second > 0)
                    {
                        itr.second -= 1;
                        count++;
                    }
                    else
                    break;
                }
                st.insert(itr.second);
            }
        }
        return count;
    }
};


