Problem Statement



Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
3
2 1 3
Sample Output 1 :
3 1 2
Explanation To Sample Input 1 :
Reverse of a give stack is 3 1 2 where first element becomes last and last becomes first.                   
Sample Input 2 :
2
3 2
Sample Output 2 :
2 3
Constraints :
0 <= N <= 10^3
Where 'N' is the number of elements in the given stack.

Time Limit: 1 sec



void insertAtB(stack<int> &stack , int n)
{
    if(stack.empty())
    {
        stack.push(n);
        return;
    }

    int num = stack.top();
    stack.pop();

    insertAtB(stack, n);

    stack.push(num);
}


void reverseStack(stack<int> &stack) {
    
    //base case
    if(stack.empty())
    return;

    int num = stack.top();
    stack.pop();

    reverseStack(stack);

    insertAtB(stack,num);

}
