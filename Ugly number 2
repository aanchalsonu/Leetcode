/*

An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return the nth ugly number.

 

Example 1:

Input: n = 10
Output: 12
Explanation: [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.
Example 2:

Input: n = 1
Output: 1
Explanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.
 

Constraints:

1 <= n <= 1690
Accepted
304.9K
Submissions
660.3K
Acceptance Rate
46.2%
Seen this question in a real interview before?
1/4

*/

class Solution {
public:
    int nthUglyNumber(int n) {

        //THE IDEA HERE IS THAT THE MINIMUM NUMBER FROM K[I-1] MULTIPLIED BY 2,3, OR 5 WILL BE THE NEXT NUMBER
        //FIND THE NEXT NUMBER AND JUST INCREMENT TH EPOINTERS , ANSWER WILL BE K[N-1]
        int i,j,t2=0,t3=0,t5=0;
        vector<int> k(n);

        k[0] = 1;
        for(i=1;i<n;i++)
        {
            k[i] = min(k[t2]*2 , min(k[t3]*3,k[t5]*5));
            if(k[i] == k[t2]*2)
            t2++;
            if(k[i] == k[t3]*3)
            t3++;
            if(k[i] == k[t5]*5)
            t5++; 
        }
        return k[n-1];


















        // set<long> set;
        // long nthNumber = 1;
        // set.insert(nthNumber);
        // for(int i=0; i<n; i++){
        //     nthNumber = *set.begin();
        //     set.erase(nthNumber);
        //     set.insert(nthNumber*2);
        //     set.insert(nthNumber*3);
        //     set.insert(nthNumber*5);
        // }
        // return nthNumber;
    }
};
