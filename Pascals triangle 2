/*

Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]

*/

class Solution {
public:

    
    vector<int> getRow(int n) {

        vector<int> res(n+1,1);

        int i;
        long long int temp=1;

        for(i=1;i<n;i++)
        {
            temp = temp * (n-i+1)/i;
            res[i] = temp;
        }
        return res;




        // vector<vector<int>> tri;
        // vector<int> res;
        // for(int i=0;i<rowIndex+1;i++)
        // {
        //     tri[i].resize(i+1,1);
        //     for(int j=1;j<i;j++)
        //     {
        //         tri[i][j] = tri[i-1][j-1]+tri[i-1][j];
        //     }
        // }

        // int n = tri[rowIndex].size();
        // for(int i=0;i<n;i++)
        // res.push_back(tri[rowIndex][i]);

        // return res;

    }
};
