/*

Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

 

Example 1:

Input: nums = [1,2,3]
Output: 6
Example 2:

Input: nums = [1,2,3,4]
Output: 24
Example 3:

Input: nums = [-1,-2,-3]
Output: -6
 

Constraints:

3 <= nums.length <= 104
-1000 <= nums[i] <= 1000

*/

class Solution {
public:
    /*
        FIRST COMPUTE THE PRODUCT OF LAST 3 NUMBERS 
        AND ALSO COMPUTE THE PRODUCT OF LAST NUMBER AND THE FIRST AND SECOND 
        NUMER 
        RETURN THE MAXIMUM PRODUCT

    */

    int maximumProduct(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(),nums.end());
        
        int i = n-1;
        int prod1 = 0,prod2=0;
        prod1 = nums[i]*nums[i-1]*nums[i-2];
        prod2 = nums[n-1]*nums[0]*nums[1];
        return max(prod1,prod2);
    }
};
