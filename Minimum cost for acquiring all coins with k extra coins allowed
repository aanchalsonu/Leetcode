/*

You are given a list of N coins of different denominations. You can pay an amount equivalent to any
1 coin and can acquire that coin. In addition, once you have paid for a coin, we can choose at most K more 
coins and can acquire those for free. The task is to find the minimum amount required to acquire all the N coins for a given value of K.

Examples : 

Input : coin[] = {100, 20, 50, 10, 2, 5}, 
        k = 3
Output : 7

Input : coin[] = {1, 2, 5, 10, 20, 50}, 
        k = 3
Output : 3

*/

// C++ program to acquire all n coins
#include<bits/stdc++.h>
using namespace std;

// function to calculate min cost
int minCost(int coin[], int n, int k)
{
	// sort the coins value
	sort(coin, coin + n);

	// calculate no. of
	// coins needed
	int coins_needed = ceil(1.0 * n /
							(k + 1));

	// calculate sum of
	// all selected coins
	int ans = 0;
	for (int i = 0; i <= coins_needed - 1;
									i++)
		ans += coin[i];
	
	return ans;
}

// Driver Code
int main()
{
	int coin[] = {8, 5, 3, 10,
				2, 1, 15, 25};
	int n = sizeof(coin) / sizeof(coin[0]);
	int k = 3;
	cout << minCost(coin, n, k);
	return 0;
}
