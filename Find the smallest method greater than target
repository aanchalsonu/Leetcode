/*

You are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different
characters in letters.

Return the smallest character in letters that is lexicographically greater than target. If such a character does not exist, return the first 
character in letters.

 

Example 1:

Input: letters = ["c","f","j"], target = "a"
Output: "c"
Explanation: The smallest character that is lexicographically greater than 'a' in letters is 'c'.
Example 2:

Input: letters = ["c","f","j"], target = "c"
Output: "f"
Explanation: The smallest character that is lexicographically greater than 'c' in letters is 'f'.
Example 3:

Input: letters = ["x","x","y","y"], target = "z"
Output: "x"
Explanation: There are no characters in letters that is lexicographically greater than 'z' so we return letters[0].
 
 */
 
 class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) {
        int i,j;
        for(i=0;i<letters.size();i++)
        {
            if(letters[i] > target)
            return letters[i];
        }
        return letters[0];



        // i=0;
        // j = letters.size()-1;
        // while(i<=j)
        // {
        //     int mid = (i+j)/2;
        //     if(letters[mid] == target)
        //     return letters[mid+1];
        //     else if(letters[mid] < target)
        //     i = mid+1;
        //     else if(letters[mid] > target)
        //     j = mid-1;
        // }
        // return letters[0];
    }
};
