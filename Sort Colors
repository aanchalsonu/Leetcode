/*
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, 
with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]

*/


INPLACE SORTING USIGN INSERTION SORT METHOD
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int i,j;
        int minIndex=0;
        for(i=1;i<nums.size();i++)
        {
            int curr = nums[i];
            j = i-1;
            while(j>=0 && nums[j]>curr)
            {
                nums[j+1] = nums[j];
                j = j-1;
            }
            nums[j+1] = curr;
        }
    }
};






class Solution {
public:
    void sortColors(vector<int>& nums) {
        int o=0,z=0,t=0,k=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i] == 0)
            z++;
            else if(nums[i] == 1)
            o++;
            else
            t++;
        }

        while(z--)
        {
            nums[k++] = 0;
        }

        while(o--)
        {
            nums[k++] = 1;
        }

        while(t--)
        {
            nums[k++] = 2;
        }
    }
};
