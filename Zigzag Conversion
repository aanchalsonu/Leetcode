/*

The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a 
fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"

*/

class Solution {
public:
    string convert(string s, int n) {
        vector<string> v(n,"");
        if(n <= 1) return s;

        /*

            THE MAIN LOGIC IS : CREATE THE ARRAY OF STRINGS WHITH SIZE EQUAL TO NUMBER OF ROES GIVEN
            FOR EACH ROW : LETS TAKE A POINTER DIR IF IT IS 1 THEN WE HAVE TO GO BY INCREMENTING THE POINTER AND IF IT IS -1 WE SHOULD KEEP DECREMENTING THE POINTER AND ADD THE CHARACTER TO THE STRING
            WHENEVER THE POINTER J REACHES THE ROW SIZE JUST CHANGE THE DIRECTION OF THE POINTER DIR 

        */
        int i,j=0,dir=-1;
        for(i=0;i<s.length();i++)
        {
            if(j == 0 || j == n-1)
            dir *= (-1);

            v[j] += s[i];
            if(dir == 1)
            j++;
            else j--;
             
        }
        string res ;

        for(auto &itr : v)
        res += itr;

        return res;
    }
};
