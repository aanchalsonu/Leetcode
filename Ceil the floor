Problem Statement: Youâ€™re given an sorted array arr of n integers and an integer x. Find the floor and ceiling of x in arr[0..n-1].
The floor of x is the largest element in the array which is smaller than or equal to x.
The ceiling of x is the smallest element in the array greater than or equal to x.




int floor(int arr[], int n, int x)
{
	int l=0,h=n-1;
	
	int ans=-1;
	while(l<=h)
	{
		int m = (l+h)/2;
		if(arr[m]==x)
		{
			ans = arr[m];
			return ans;
		}
		else if(arr[m]<x)
		{
			ans = arr[m];
			l= m+1;
		}
		else
		h=m-1;
	}
	return ans;
}


int ceil(int arr[], int n, int x)
{
	int l=0,h=n-1;
	int ans=-1;
	while(l<=h)
	{
		int m = (l+h)/2;
		if(arr[m]==x)
		{
			ans = arr[m];
			return ans;
		}
		else if(arr[m]>x)
		{
			ans = arr[m];
			h= m-1;
		}
		else
		l=m+1;
	}
	return ans;
}


pair<int, int> getFloorAndCeil(int arr[], int n, int x) {
	// Write your code here.
	pair<int,int> answer;
	int flr = 0,cel = 0;
	sort(arr,arr+n);
	answer.first = floor(arr,n,x);
	answer.second = ceil(arr,n,x);
	return answer;
}
