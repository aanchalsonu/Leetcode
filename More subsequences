Problem Statement
return the string with more number of subsequences.
Incase both the strings have same number of subsequences return a.

Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
1 3
f
eeg
Sample Output 1:
eeg
Explanation Of Sample Output 1:
'A' has distinct subsequences = ["f"].
'B' has distinct subsequences = ["e", "g", "eg", "ee", "eeg"].
So our answer is "eeg".
Sample Input 2:
3 4
abc
dddd
Sample Output 2:
abc
Constraints:
1 <= 'N', 'M' <= 30.

Time Limit: 1 sec

(CAN ALSO BE DONE USING SET)

string moreSubsequence(int n, int m, string a, string b)
{
    // Write your code here
    unordered_map<char,int> mp1,mp2;
    for(int i=0;i<a.length();i++)
    {
        mp1[a[i]]++;
    }

    for(int i=0;i<b.length();i++)
    {
        mp2[b[i]]++;
    }

    if(mp1.size() > mp2.size())
    return a;
    else if(mp2.size() > mp1.size())
    return b;
    else if(mp1.size() == mp2.size())
    {
        int count1=0,count2=0;
        for(auto i: mp1)
        {
            count1 += i.second;
        }

        for(auto i : mp2)
        {
            count2 += i.second;
        }
        if(count1 == count2)
        return a;
        
        return count1>count2 ? a : b;
    }
}


