Given an array of n distinct elements. Find the minimum number of swaps required to sort the array in strictly increasing order.


Example 1:

Input:
nums = {2, 8, 5, 4}
Output:
1
Explaination:
swap 8 with 4.
Example 2:

Input:
nums = {10, 19, 6, 3, 5}
Output:
2
Explaination:
swap 10 with 3 and swap 19 with 5.










//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends



class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&nums)
	{
	    // Code here
	    
	    int i,j,count=0;
	    int index=0;;
	    
	    vector<pair<int,int>> v;
	    for(i=0;i<nums.size();i++)
	    {
	        v.push_back({nums[i],i});
	    }
	    
	    sort(v.begin(),v.end());
	    
	    for(i=0;i<nums.size();i++)
	    {
	        pair<int,int> p = v[i];
	        int data = p.first;
	        index = p.second;
	        
	        if(i != index)
	        {
	            count++;
	            swap(v[i],v[index]);
	            i--;
	        }
	    }
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	   // int i,j,count=0;
	   // int n = nums.size();
	   // vector<int> temp = nums;
	   // vector<int> visited(100000,0);
	   // sort(temp.begin(),temp.end());
	   // i=0;
	   // while(i<n)
	   // {
	   //     if(temp[i]==nums[i] && visited[i] != 1)
	   //     {
	   //         visited[nums[i]] = 1;
	   //         i++;
	   //     }
	   //     else if(visited[i] == 0 )
	   //     {
	   //         auto itr = find(nums.begin(),nums.end(),temp[i]);
	   //         j = itr-nums.begin();
	   //         swap(nums[i],nums[j]);
	   //         visited[i] = 1;
	   //         count += 1;
	   //         i++;
	   //     }
	   //     else 
	   //     i++;
	        
	   // }
	    return count;
	    
	}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
