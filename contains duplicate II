/*

Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j]
and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109
0 <= k <= 105

*/
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        int i,j,n;
        unordered_map<int,int> mp;
        n = nums.size();
        for(i=0;i<n;i++)
        {
            //FIND THE OCCURENCE OF THE NUMBER IN THE MAP,WHICH IS MAPPED TO THE INDEX 
            if(mp.count(nums[i]))
            {
                //CHECK IF CONDITION SATISFIES
                if(i-mp[nums[i]] <= k)
                return true;
            }
            mp[nums[i]] = i;
        }
        return false;


        // for(i=0;i<n;i++)
        // {
        //     for(j=i+1;j<n;j++)
        //     {
        //         if(nums[i] == nums[j] && abs(i-j)<=k)
        //         {
        //             return true;
        //         }
        //     }
        // }

        return false;
    }
};
