Problem Statement



Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
3 27


Sample Output 1:
3


Explanation For Sample Input 1:
3rd Root of 27 is 3, as (3)^3 equals 27.


Sample Input 2:
4 69


Sample Output 2:
-1


Explanation For Sample Input 2:
4th Root of 69 is not an integer, hence -1.


Expected Time Complexity:
Try to do this in O(log(n+m)).


Constraints:
1 <= n <= 30
1 <= m <= 10^9

Time Limit: 1 sec.











int func(int n,int m,int mid)
{
  long long ans=1;
  for(int i=1;i<=n;i++)
  {
    ans = ans * mid;
    if(ans > m)
    return 2;

  }

  if(ans==m)
  return 1;

  return 0;

}

int NthRoot(int n, int m) {
  // Write your code here.


  int l=1,h=m;
  while(l<=h)
  {
    int mid = (l+h)/2;
    int midn = func(n,m,mid);
    if(midn == 1)
    return mid;
    else if(midn == 2)
    h = mid-1;
    else
    l = mid+1;
    
  }

  return -1;
}
